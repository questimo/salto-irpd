jira.Automation ITS__New_Laptop__2__Attach_associated_laptop_s__with_the_requestor_for_quick_reference_IT_Support@fsssbbsssjkssssssus {
  name = "ITS: New Laptop -2- Attach associated laptop(s) with the requestor for quick reference"
  state = "ENABLED"
  description = "When requesting a new laptop, automatically associate non-retired laptops to the ticket for context."
  authorAccountId = {
    id = "712020:6a8656a5-8285-4c80-b72b-2261112430f7"
    displayName = "provision-fy24-5-bot"
  }
  actor = {
    type = "ACCOUNT_ID"
    value = {
      id = "557058:f58131cb-b67d-43c7-b30d-6b58d40bd077"
      displayName = "Automation for Jira"
    }
  }
  trigger = {
    component = "TRIGGER"
    type = "jira.issue.event.trigger:created"
    value = {
      eventKey = "jira:issue_created"
      issueEvent = "issue_created"
    }
    children = [
    ]
    conditions = [
    ]
  }
  components = [
    {
      component = "CONDITION"
      type = "jira.issue.condition"
      value = {
        selectedField = {
          type = "NAME"
          value = jira.Field.instance.Request_Type__vp_origin__c@suubuu.name
        }
        selectedFieldType = "com.atlassian.servicedesk:vp-origin"
        comparison = "ONE_OF"
        compareFieldValue = {
          type = "NAME"
          multiValue = true
          values = [
            "Request a new notebook",
          ]
        }
      }
      children = [
      ]
      conditions = [
      ]
    },
    {
      component = "ACTION"
      type = "cmdb.lookup.objects"
      value = {
        workspaceId = "b01943c1-4dd4-4139-bd2b-1e96ba2b65f8"
        schemaId = jira.ObjectSchema.instance.missing_6
        customSmartValue = {
          id = "_customsmartvalue_id_1636680237468"
          name = {
            type = "FREE"
            value = "lookupObjects"
          }
          type = "IQL"
          query = {
            type = "SMART"
            value = "\"Owner\" LIKE \"{{issue.reporter.displayName}}\" AND \"Status\" != \"Retired\""
          }
          lazy = false
        }
      }
      children = [
      ]
      conditions = [
      ]
    },
    {
      component = "ACTION"
      type = "codebarrel.action.log"
      children = [
      ]
      conditions = [
      ]
      rawValue = "Requestor is {{issue.${ jira.Field.instance.Reporter__user }}} who {{Issue.reporter.displayName}} has these assets {{lookupObjects}}"
    },
    {
      component = "CONDITION"
      type = "jira.condition.container.block"
      children = [
        {
          component = "CONDITION_BLOCK"
          type = "jira.condition.if.block"
          value = {
            conditionMatchType = "ALL"
          }
          children = [
            {
              component = "ACTION"
              type = "jira.issue.edit"
              value = {
                operations = [
                  {
                    field = {
                      type = "NAME"
                      value = jira.Field.instance.Employee_Asset_s___cmdb_object_cftype__c@sjkuubbuu.name
                    }
                    fieldType = "com.atlassian.jira.plugins.cmdb:cmdb-object-cftype"
                    type = "SET"
                    rawValue = "Key IN ({{lookupObjects}})"
                  },
                ]
                sendNotifications = true
              }
              children = [
              ]
              conditions = [
              ]
            },
          ]
          conditions = [
            {
              component = "CONDITION"
              type = "jira.comparator.condition"
              value = {
                first = "{{lookupObjects}}"
                second = ""
                operator = "NOT_EQUALS"
              }
              children = [
              ]
              conditions = [
              ]
            },
          ]
        },
      ]
      conditions = [
      ]
    },
    {
      component = "ACTION"
      type = "cmdb.lookup.objects"
      value = {
        workspaceId = "b01943c1-4dd4-4139-bd2b-1e96ba2b65f8"
        schemaId = jira.ObjectSchema.instance.missing_6
        customSmartValue = {
          id = "_customsmartvalue_id_1636680266827"
          name = {
            type = "FREE"
            value = "lookupObjects"
          }
          type = "IQL"
          query = {
            type = "SMART"
            value = "objectType=\"Laptops\" AND \"Owner\" LIKE \"{{issue.reporter.displayName}}\" AND \"Status\" != \"Retired\""
          }
          lazy = false
        }
      }
      children = [
      ]
      conditions = [
      ]
    },
    {
      component = "CONDITION"
      type = "jira.comparator.condition"
      value = {
        first = "{{lookupObjects}}"
        second = ""
        operator = "NOT_EQUALS"
      }
      children = [
      ]
      conditions = [
      ]
    },
    {
      component = "ACTION"
      type = "jira.issue.edit"
      value = {
        operations = [
          {
            field = {
              type = "NAME"
              value = jira.Field.instance.Associated_Laptops__cmdb_object_cftype__c@suubbuu.name
            }
            fieldType = "com.atlassian.jira.plugins.cmdb:cmdb-object-cftype"
            type = "SET"
            rawValue = "Key IN ({{lookupObjects}})"
          },
        ]
        advancedFields = ""
        sendNotifications = true
      }
      children = [
      ]
      conditions = [
      ]
    },
    {
      component = "ACTION"
      type = "codebarrel.action.log"
      children = [
      ]
      conditions = [
      ]
      rawValue = "Warranty date for laptop associated is {{lookupObjects.Warranty Expiry Date}} and today is {{now}}"
    },
    {
      component = "BRANCH"
      type = "jira.smart.values.branch"
      value = {
        id = "_customsmartvalue_id_1628092197470"
        name = {
          type = "FREE"
          value = "warrantyexpirydate"
        }
        type = "SMART"
        query = {
          type = "SMART"
          value = "{{lookupObjects.Warranty Expiry Date}}"
        }
        lazy = false
      }
      children = [
        {
          component = "CONDITION"
          type = "jira.comparator.condition"
          value = {
            first = "{{warrantyexpirydate}}"
            second = "{{now}}"
            operator = "GREATER_THAN"
          }
          children = [
          ]
          conditions = [
          ]
        },
        {
          component = "ACTION"
          type = "jira.issue.comment"
          value = {
            comment = '''
{panel:title=ATTENTION|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1|bgColor=#FFFFCE}{{issue.reporter.displayName}} has an active laptop that is *within* the warranty period. Investigate why they need another laptop before approving this request. 

'''
            publicComment = false
            sendNotifications = true
            addCommentOnce = true
          }
          children = [
          ]
          conditions = [
          ]
        },
      ]
      conditions = [
      ]
    },
    {
      component = "BRANCH"
      type = "jira.smart.values.branch"
      value = {
        id = "_customsmartvalue_id_1628092332925"
        name = {
          type = "FREE"
          value = "status"
        }
        type = "SMART"
        query = {
          type = "SMART"
          value = "{{lookupObjects.Status}}"
        }
        lazy = false
      }
      children = [
        {
          component = "CONDITION"
          type = "jira.comparator.condition"
          value = {
            first = "{{status}}"
            second = "On Order"
            operator = "EQUALS"
          }
          children = [
          ]
          conditions = [
          ]
        },
        {
          component = "ACTION"
          type = "jira.issue.comment"
          value = {
            comment = '''
{panel:title=ATTENTION|borderStyle=dashed|borderColor=#ccc|titleBGColor=#cd5c5c|bgColor=#cd5c5c}{{issue.reporter.displayName}} has laptop orders already in progress. 

Further justification is required before approval of this additional request can proceed.

Laptop(s) on Order:
{{#lookupObjects}}
|{{Name}} |{{Model.Name}} |{{Status}} |
{{/}}
'''
            publicComment = true
            sendNotifications = true
            addCommentOnce = true
          }
          children = [
          ]
          conditions = [
          ]
        },
      ]
      conditions = [
      ]
    },
  ]
  canOtherRuleTrigger = false
  notifyOnError = "FIRSTERROR"
  projects = [
    {
      projectId = jira.Project.instance.IT_Support@s
    },
  ]
  labels = [
  ]
  writeAccessType = "UNRESTRICTED"
  collaborators = [
  ]
  billingType = "NORMAL"
  _alias = "ITS: New Laptop -2- Attach associated laptop(s) with the requestor for quick reference"
}
