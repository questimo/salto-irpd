jira.Automation ITO__Request_system_access___Set_Manager_and_Application_Approvers_IT_Operations@fssssbsssssus {
  name = "ITO: Request system access - Set Manager and Application Approvers"
  state = "ENABLED"
  authorAccountId = {
    id = "712020:6a8656a5-8285-4c80-b72b-2261112430f7"
    displayName = "provision-fy24-5-bot"
  }
  actor = {
    type = "ACCOUNT_ID"
    value = {
      id = "557058:f58131cb-b67d-43c7-b30d-6b58d40bd077"
      displayName = "Automation for Jira"
    }
  }
  trigger = {
    component = "TRIGGER"
    type = "jira.issue.event.trigger:created"
    value = {
      eventKey = "jira:issue_created"
      issueEvent = "issue_created"
    }
    children = [
    ]
    conditions = [
    ]
  }
  components = [
    {
      component = "CONDITION"
      type = "jira.issue.condition"
      value = {
        selectedField = {
          type = "NAME"
          value = jira.Field.instance.Request_Type__vp_origin__c@suubuu.name
        }
        selectedFieldType = "com.atlassian.servicedesk:vp-origin"
        comparison = "EQUALS"
        compareFieldValue = {
          type = "NAME"
          value = "Request system access"
          multiValue = false
        }
      }
      children = [
      ]
      conditions = [
      ]
    },
    {
      component = "ACTION"
      type = "cmdb.lookup.objects"
      value = {
        workspaceId = "b01943c1-4dd4-4139-bd2b-1e96ba2b65f8"
        schemaId = jira.ObjectSchema.instance.missing_7
        customSmartValue = {
          id = "_customsmartvalue_id_1628444620878"
          name = {
            type = "FREE"
            value = "lookupObjects"
          }
          type = "IQL"
          query = {
            type = "SMART"
            value = "objectType = \"People\" and \"User\" = {{issue.reporter}}"
          }
          lazy = false
        }
      }
      children = [
      ]
      conditions = [
      ]
    },
    {
      component = "ACTION"
      type = "jira.issue.edit"
      value = {
        operations = [
          {
            field = {
              type = "NAME"
              value = jira.Field.instance.Manager__multiuserpicker__c.name
            }
            fieldType = "com.atlassian.jira.plugin.system.customfieldtypes:multiuserpicker"
            type = "SET"
            value = [
              {
                type = "SMART"
                value = "{{lookupObjects.Approver.User}}"
              },
            ]
          },
          {
            field = {
              type = "NAME"
              value = jira.Field.instance.Support_Group__multigrouppicker__c@suuuu.name
            }
            fieldType = "com.atlassian.jira.plugin.system.customfieldtypes:multigrouppicker"
            type = "SET"
            value = [
              {
                type = "SMART"
                value = "{{issue.Application to Change.Support Groups}}"
              },
            ]
          },
          {
            field = {
              type = "NAME"
              value = jira.Field.instance.Approver_groups__multigrouppicker__c@suuuu.name
            }
            fieldType = "com.atlassian.jira.plugin.system.customfieldtypes:multigrouppicker"
            type = "SET"
            value = [
              {
                type = "SMART"
                value = "{{issue.Application to Change.Approval Group}}"
              },
            ]
          },
        ]
        sendNotifications = true
      }
      children = [
      ]
      conditions = [
      ]
    },
    {
      component = "ACTION"
      type = "jira.issue.transition"
      value = {
        operations = [
        ]
        sendNotifications = true
        destinationStatus = {
          type = "NAME"
          value = jira.Status.instance.waiting_for_approval@s.name
        }
        transitionMatch = ""
      }
      children = [
      ]
      conditions = [
      ]
    },
  ]
  canOtherRuleTrigger = false
  notifyOnError = "FIRSTERROR"
  projects = [
    {
      projectId = jira.Project.instance.IT_Operations@s
    },
  ]
  labels = [
  ]
  writeAccessType = "UNRESTRICTED"
  collaborators = [
  ]
  billingType = "NORMAL"
  _alias = "ITO: Request system access - Set Manager and Application Approvers"
}
