jira.Automation HR__Employee_Offboarding__1__Get_assets_associated_with_employee_Human_Resources@fsssbbsssssus {
  name = "HR: Employee Offboarding -1- Get assets associated with employee"
  state = "ENABLED"
  description = "Lookup all the phones, monitors, and laptops associated with the user and attach them to the issue"
  authorAccountId = {
    id = "712020:6a8656a5-8285-4c80-b72b-2261112430f7"
    displayName = "provision-fy24-5-bot"
  }
  actor = {
    type = "ACCOUNT_ID"
    value = {
      id = "557058:f58131cb-b67d-43c7-b30d-6b58d40bd077"
      displayName = "Automation for Jira"
    }
  }
  trigger = {
    component = "TRIGGER"
    type = "jira.issue.event.trigger:created"
    value = {
      eventKey = "jira:issue_created"
      issueEvent = "issue_created"
    }
    children = [
    ]
    conditions = [
    ]
  }
  components = [
    {
      component = "CONDITION"
      type = "jira.issue.condition"
      value = {
        selectedField = {
          type = "NAME"
          value = jira.Field.instance.Request_Type__vp_origin__c@suubuu.name
        }
        selectedFieldType = "com.atlassian.servicedesk:vp-origin"
        comparison = "EQUALS"
        compareFieldValue = {
          type = "NAME"
          value = "Employee offboarding"
          multiValue = false
        }
      }
      children = [
      ]
      conditions = [
      ]
    },
    {
      component = "ACTION"
      type = "cmdb.lookup.objects"
      value = {
        workspaceId = "b01943c1-4dd4-4139-bd2b-1e96ba2b65f8"
        schemaId = jira.ObjectSchema.instance.missing_6
        customSmartValue = {
          id = "_customsmartvalue_id_1630954491416"
          name = {
            type = "FREE"
            value = "lookupObjects"
          }
          type = "IQL"
          query = {
            type = "SMART"
            value = "\"Owner\"={{issue.Leaving Employee}} AND \"Status\" != \"Retired\""
          }
          lazy = false
        }
      }
      children = [
      ]
      conditions = [
      ]
    },
    {
      component = "CONDITION"
      type = "jira.condition.container.block"
      children = [
        {
          component = "CONDITION_BLOCK"
          type = "jira.condition.if.block"
          value = {
            conditionMatchType = "ALL"
          }
          children = [
            {
              component = "ACTION"
              type = "jira.issue.edit"
              value = {
                operations = [
                  {
                    field = {
                      type = "NAME"
                      value = jira.Field.instance.Employee_Asset_s___cmdb_object_cftype__c@sjkuubbuu.name
                    }
                    fieldType = "com.atlassian.jira.plugins.cmdb:cmdb-object-cftype"
                    type = "SET"
                    rawValue = "Key IN ({{lookupObjects}})"
                  },
                ]
                sendNotifications = true
              }
              children = [
              ]
              conditions = [
              ]
            },
          ]
          conditions = [
            {
              component = "CONDITION"
              type = "jira.comparator.condition"
              value = {
                first = "{{lookupObjects}}"
                second = ""
                operator = "NOT_EQUALS"
              }
              children = [
              ]
              conditions = [
              ]
            },
          ]
        },
      ]
      conditions = [
      ]
    },
    {
      component = "ACTION"
      type = "jira.issue.transition"
      value = {
        operations = [
        ]
        sendNotifications = true
        destinationStatus = {
          type = "NAME"
          value = jira.Status.instance.implementing.name
        }
        transitionMatch = ""
      }
      children = [
      ]
      conditions = [
      ]
    },
  ]
  canOtherRuleTrigger = false
  notifyOnError = "FIRSTERROR"
  projects = [
    {
      projectId = jira.Project.instance.Human_Resources@s
    },
  ]
  labels = [
  ]
  writeAccessType = "UNRESTRICTED"
  collaborators = [
  ]
  billingType = "NORMAL"
  _alias = "HR: Employee Offboarding -1- Get assets associated with employee"
}
